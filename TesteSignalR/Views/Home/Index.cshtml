<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teste SignalR - Gerenciamento de Entregas</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.7/signalr.min.js"></script>
</head>
<body>
    <h1>Teste do SignalR - Gerenciamento de Entregas</h1>
    <div>
        <button id="connect">Conectar ao SignalR</button>
        <button id="notificar">Notificar Afiliado</button>
        <button id="aceitar">Simular Aceitação</button>
        <button id="recusar">Simular Recusa</button>
        <p>Status: <span id="status">Desconectado</span></p>
        <div id="messages"></div>
    </div>

    <script>
        const hubUrl = "http://localhost:5153/entregashub";
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl(hubUrl)
            .configureLogging(signalR.LogLevel.Debug)
            .build();


        // Elementos HTML
        const connectButton = document.getElementById("connect");
        const notificarButton = document.getElementById("notificar");
        const aceitarButton = document.getElementById("aceitar");
        const recusarButton = document.getElementById("recusar");
        const statusText = document.getElementById("status");
        const messagesDiv = document.getElementById("messages");

        // Conectar ao Hub
        document.getElementById("connect").addEventListener("click", async () => {
            try {
                console.log("Tentando conectar ao SignalR...");
                await hubConnection.start();
                document.getElementById("status").textContent = "Conectado!";
                console.log("Conexão estabelecida com o SignalR!");
            } catch (err) {
                console.error("Erro ao conectar ao SignalR:", err);
                document.getElementById("status").textContent = "Erro ao conectar.";
            }
        });

        // Notificar afiliado
        notificarButton.addEventListener("click", async () => {
            try {
                const afiliadoId = "1030f449-e1d8-464b-8f3e-315076a97fce";
                const entregaId = "3228f2ea-2be6-45fe-ab7e-0ea328ebbbe1";
                await hubConnection.invoke("NotificarEntrega", afiliadoId, entregaId);
                console.log(`Notificação enviada para o afiliado ${afiliadoId} sobre a entrega ${entregaId}`);
            } catch (err) {
                console.error("Erro ao enviar notificação:", err);
            }
        });

        // Simular aceitação de entrega
        aceitarButton.addEventListener("click", async () => {
            try {
                const entregaId = "3228f2ea-2be6-45fe-ab7e-0ea328ebbbe1";
                await hubConnection.invoke("ResponderEntrega", entregaId, true);
                console.log(`Simulação: Aceitação da entrega ${entregaId}`);
            } catch (err) {
                console.error("Erro ao simular aceitação:", err);
            }
        });

        // Simular recusa de entrega
        recusarButton.addEventListener("click", async () => {
            try {
                const entregaId = "3228f2ea-2be6-45fe-ab7e-0ea328ebbbe1";
                await hubConnection.invoke("ResponderEntrega", entregaId, false);
                console.log(`Simulação: Recusa da entrega ${entregaId}`);
            } catch (err) {
                console.error("Erro ao simular recusa:", err);
            }
        });

        // Receber mensagem de notificação
        hubConnection.on("ReceberEntrega", (entregaId) => {
            const messageElement = document.createElement("p");
            messageElement.textContent = `Nova entrega recebida! ID: ${entregaId}`;
            messagesDiv.appendChild(messageElement);
            console.log("Nova entrega recebida:", entregaId);
        });

        // Receber confirmação de aceitação
        hubConnection.on("EntregaAceita", (afiliadoId, entregaId) => {
            const messageElement = document.createElement("p");
            messageElement.textContent = `Entrega ${entregaId} aceita pelo afiliado ${afiliadoId}`;
            messagesDiv.appendChild(messageElement);
            console.log(`Entrega ${entregaId} aceita pelo afiliado ${afiliadoId}`);
        });

        // Receber notificação de recusa
        hubConnection.on("EntregaRecusada", (afiliadoId, entregaId) => {
            const messageElement = document.createElement("p");
            messageElement.textContent = `Entrega ${entregaId} recusada pelo afiliado ${afiliadoId}`;
            messagesDiv.appendChild(messageElement);
            console.log(`Entrega ${entregaId} recusada pelo afiliado ${afiliadoId}`);
        });
    </script>
</body>
</html>
